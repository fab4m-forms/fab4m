"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2599],{7126:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>c,contentTitle:()=>f,default:()=>v,frontMatter:()=>d,metadata:()=>p,toc:()=>u});var t=a(7462),l=a(7294),n=a(3905),o=a(1809),s=a(891);const r=(0,s.Np)({file:(0,s.At)({label:"File",validators:[(0,s.jb)(1024,{message:"The file is too large, maximum size is %size. The uploaded file is %fileSize.",maxSizeInfo:"Max file size: %size"})]}),break:(0,s.Pr)(),content:(0,s.kQ)({},(e=>l.createElement("div",null,"Nice upload ",e.file.name,"!")))});function m(){return l.createElement(s.H,{form:r,hideSubmit:!0})}const d={},f="Max file Size",p={unversionedId:"validators/filesize",id:"validators/filesize",title:"Max file Size",description:"Validate that a provided file isn't larger than the provided file size.",source:"@site/docs/validators/filesize.mdx",sourceDirName:"validators",slug:"/validators/filesize",permalink:"fab4m/docs/validators/filesize",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Allowed file extensions",permalink:"fab4m/docs/validators/fileExtension"},next:{title:"Max value",permalink:"fab4m/docs/validators/max"}},c={},u=[{value:"Example",id:"example",level:2},{value:"Compatible components",id:"compatible-components",level:2}],x={toc:u};function v(e){let{components:i,...a}=e;return(0,n.kt)("wrapper",(0,t.Z)({},x,a,{components:i,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"max-file-size"},"Max file Size"),(0,n.kt)("p",null,"Validate that a provided file isn't larger than the provided file size."),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)(o.Z,{source:'import React from "react";\nimport {\n  createForm,\n  pageBreak,\n  fileField,\n  StatefulFormView,\n  content,\n  fileSize,\n} from "@fab4m/fab4m";\nimport "fab4m/css/basic/basic.css";\n\nconst form = createForm({\n  file: fileField({\n    label: "File",\n    validators: [\n      fileSize(1024, {\n        message:\n          "The file is too large, maximum size is %size. The uploaded file is %fileSize.",\n        maxSizeInfo: "Max file size: %size",\n      }),\n    ],\n  }),\n  break: pageBreak(),\n  content: content({}, (data) => <div>Nice upload {data.file.name}!</div>),\n});\n\nexport default function FileExtensionExample() {\n  return <StatefulFormView form={form} hideSubmit={true} />;\n}\n',example:(0,n.kt)(m,{mdxType:"ExampleComponent"}),mdxType:"Example"}),(0,n.kt)("h2",{id:"compatible-components"},"Compatible components"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/components/file"},"File upload"))))}v.isMDXComponent=!0}}]);