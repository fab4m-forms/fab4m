"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1067],{5806:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>u,default:()=>b,frontMatter:()=>m,metadata:()=>d,toc:()=>h});var n=t(7462),l=t(7294),o=t(3905),s=t(1809),r=t(891);const i=(0,r.Np)({age:(0,r.OL)({label:"Age",validators:[(0,r.uz)((e=>27!==e))],required:!0}),otherAge:(0,r.OL)({label:"Other Age",validators:[(0,r.uz)((e=>{const a=[];return e<18&&a.push({path:"",message:"Under age!"}),e<27&&a.push({path:"",message:"Too young!"}),e>27&&a.push({path:"",message:"Too old!"}),a}))],required:!0}),break:(0,r.Pr)(),content:(0,r.kQ)({},(()=>l.createElement("div",null,"Great choice!")))});function c(){return l.createElement(r.H,{form:i,hideSubmit:!0})}const m={},u="callback",d={unversionedId:"validators/callback",id:"validators/callback",title:"callback",description:"This validator executes a callback that verifies that the",source:"@site/docs/validators/callback.mdx",sourceDirName:"validators",slug:"/validators/callback",permalink:"/docs/validators/callback",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Allowed values",permalink:"/docs/validators/allowedValues"},next:{title:"Disallowed values",permalink:"/docs/validators/disallowedValues"}},p={},h=[{value:"Example",id:"example",level:2},{value:"Compatible components",id:"compatible-components",level:2}],v={toc:h};function b(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},v,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"callback"},"callback"),(0,o.kt)("p",null,"This validator executes a callback that verifies that the\ndata is correct.\n",(0,o.kt)("strong",{parentName:"p"},"Note:")," This validator does not work with JSON schema!"),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(s.Z,{source:'import React from "react";\nimport {\n  createForm,\n  pageBreak,\n  StatefulFormView,\n  content,\n  integerField,\n  callback,\n} from "@fab4m/fab4m";\nimport "@fab4m/fab4m/css/basic/basic.css";\n\nconst form = createForm({\n  age: integerField({\n    label: "Age",\n    validators: [\n      callback((value) => {\n        // Just returning a condition that must pass is the simplest form.\n        return value !== 27;\n      }),\n    ],\n    required: true,\n  }),\n  otherAge: integerField({\n    label: "Other Age",\n    validators: [\n      callback((value) => {\n        const messages = [];\n        // You can return one or more messages. The path is a json pointer\n        // relative to the value.\n        if (value < 18) {\n          messages.push({ path: "", message: "Under age!" });\n        }\n        if (value < 27) {\n          messages.push({ path: "", message: "Too young!" });\n        }\n        if (value > 27) {\n          messages.push({ path: "", message: "Too old!" });\n        }\n        return messages;\n      }),\n    ],\n    required: true,\n  }),\n\n  break: pageBreak(),\n  content: content({}, () => <div>Great choice!</div>),\n});\n\nexport default function TextFieldExample() {\n  return <StatefulFormView form={form} hideSubmit={true} />;\n}\n',example:(0,o.kt)(c,{mdxType:"ExampleComponent"}),mdxType:"Example"}),(0,o.kt)("h2",{id:"compatible-components"},"Compatible components"))}b.isMDXComponent=!0}}]);