"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[591],{98550:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>w,default:()=>F,frontMatter:()=>j,metadata:()=>o,toc:()=>y});const o=JSON.parse('{"id":"packages/autocomplete","title":"Autocomplete","description":"The @fab4m/autocomplete package provides an autocomplete widget component using the popular","source":"@site/docs/packages/autocomplete.mdx","sourceDirName":"packages","slug":"/packages/autocomplete","permalink":"/docs/packages/autocomplete","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Component reference","permalink":"/docs/guide/component-reference"},"next":{"title":"Date and time","permalink":"/docs/packages/date"}}');var i=n(74848),c=n(28453),a=n(53603),l=(n(96540),n(67995)),s=n(1173);const r=(0,s.DG)({city:(0,s.M8)({label:"City",widget:(0,l.f)({items:[["Gothenburg","gothenburg"],["Stockholm","stockholm"],"copenhagen"]})})});function m(){return(0,i.jsx)(s.WJ,{form:r,hideSubmit:!0})}const u='import * as React from "react";\n// This stylesheet that\'s needed if you use the basic theme.\nimport "@fab4m/autocomplete/src/style.css";\nimport { autocompleteWidget } from "@fab4m/autocomplete";\nimport { StatefulFormView, textField, createForm } from "@fab4m/fab4m";\nconst form = createForm({\n  city: textField({\n    label: "City",\n    widget: autocompleteWidget({\n      items: [\n        // Either use the [label, value] format...\n        ["Gothenburg", "gothenburg"],\n        ["Stockholm", "stockholm"],\n        // Or just use the value.\n        "copenhagen",\n      ],\n    }),\n  }),\n});\n\nexport default function AutocompleteExample() {\n  return <StatefulFormView form={form} hideSubmit={true} />;\n}\n';const h=(0,s.DG)({city:(0,s.M8)({label:"City",widget:(0,l.f)({items:async function(e){return[["Gothenburg","gothenburg"],["Stockholm","stockholm"]].filter((t=>t[0].toLowerCase().includes(e.toLowerCase())))}})})});function d(){return(0,i.jsx)(s.WJ,{form:h,hideSubmit:!0})}const p='import * as React from "react";\nimport "@fab4m/autocomplete/src/style.css";\nimport { autocompleteWidget } from "@fab4m/autocomplete";\nimport { StatefulFormView, textField, createForm } from "@fab4m/fab4m";\n\n// This would be your actual call to the backend.\nasync function fakeFetch(search: string) {\n  const data = [\n    ["Gothenburg", "gothenburg"],\n    ["Stockholm", "stockholm"],\n  ];\n  return data.filter((item) =>\n    item[0].toLowerCase().includes(search.toLowerCase())\n  );\n}\n\nconst form = createForm({\n  city: textField({\n    label: "City",\n    widget: autocompleteWidget({\n      items: fakeFetch,\n    }),\n  }),\n});\n\nexport default function AutocompleteExample() {\n  return <StatefulFormView form={form} hideSubmit={true} />;\n}\n',f={gothenburg:{title:"Gothenburg",description:"City of the brave!"},stockholm:{title:"Stockholm",description:"City on the wrong side of the country."}},g=(0,s.DG)({city:(0,s.M8)({label:"City",widget:(0,l.f)({items:["gothenburg","stockholm"],itemElement:e=>{const t=f[e];return(0,i.jsxs)("div",{children:[(0,i.jsx)("h3",{children:t.title}),(0,i.jsx)("p",{children:t.description})]})}})})});function x(){return(0,i.jsx)(s.WJ,{form:g,hideSubmit:!0})}const b='import * as React from "react";\nimport "@fab4m/autocomplete/src/style.css";\nimport { autocompleteWidget } from "@fab4m/autocomplete";\nimport { StatefulFormView, textField, createForm } from "@fab4m/fab4m";\n\nconst descriptions = {\n  gothenburg: {\n    title: "Gothenburg",\n    description: "City of the brave!",\n  },\n  stockholm: {\n    title: "Stockholm",\n    description: "City on the wrong side of the country.",\n  },\n};\n\nconst form = createForm({\n  city: textField({\n    label: "City",\n    widget: autocompleteWidget({\n      items: ["gothenburg", "stockholm"],\n      itemElement: (value) => {\n        const info = descriptions[value];\n        return (\n          <div>\n            <h3>{info.title}</h3>\n            <p>{info.description}</p>\n          </div>\n        );\n      },\n    }),\n  }),\n});\n\nexport default function AutocompleteExample() {\n  return <StatefulFormView form={form} hideSubmit={true} />;\n}\n',j={},w="Autocomplete",k={},y=[{value:"Installing",id:"installing",level:2},{value:"Using the autocomplete widget",id:"using-the-autocomplete-widget",level:2},{value:"Using a callback to fetch the items",id:"using-a-callback-to-fetch-the-items",level:2},{value:"Customizing the autocomplete item element",id:"customizing-the-autocomplete-item-element",level:2}];function v(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"autocomplete",children:"Autocomplete"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"@fab4m/autocomplete"})," package provides an autocomplete widget component using the popular\n",(0,i.jsx)(t.a,{href:"https://www.downshift-js.com/",children:"Downshift js package"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"installing",children:"Installing"}),"\n",(0,i.jsxs)(t.p,{children:["Install ",(0,i.jsx)(t.code,{children:"@fab4m/autocomplete"})," and ",(0,i.jsx)(t.code,{children:"downshift"})," (7.x):"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"npm install --save @fab4m/autocomplete downshift\n"})}),"\n",(0,i.jsx)(t.h2,{id:"using-the-autocomplete-widget",children:"Using the autocomplete widget"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"@fab4m/autocomplete"})," provides one widget: the ",(0,i.jsx)(t.code,{children:"autocompleteWidget"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"The following example shows it in action:"}),"\n",(0,i.jsx)(a.A,{source:u,example:(0,i.jsx)(m,{})}),"\n",(0,i.jsx)(t.h2,{id:"using-a-callback-to-fetch-the-items",children:"Using a callback to fetch the items"}),"\n",(0,i.jsx)(t.p,{children:"If you have many items to fetch you can use a callback to fetch the items\non the fly:"}),"\n",(0,i.jsx)(a.A,{source:p,example:(0,i.jsx)(d,{})}),"\n",(0,i.jsx)(t.h2,{id:"customizing-the-autocomplete-item-element",children:"Customizing the autocomplete item element"}),"\n",(0,i.jsxs)(t.p,{children:["You might want to customize the way each item looks in the autocomplete list.\nThis can be done by specifying a custom ",(0,i.jsx)(t.code,{children:"itemElement"}),":"]}),"\n",(0,i.jsx)(a.A,{source:b,example:(0,i.jsx)(x,{})})]})}function F(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(v,{...e})}):v(e)}},53603:(e,t,n)=>{n.d(t,{A:()=>s});n(96540);var o=n(35363),i=n(55875),c=n(65537),a=n(79329),l=n(74848);function s(e){return(0,l.jsxs)(c.A,{children:[(0,l.jsx)(a.A,{value:"code",label:"Code",children:(0,l.jsx)(i.A,{language:"jsx",children:e.source})}),(0,l.jsx)(a.A,{value:"example",label:"Example",children:(0,l.jsx)(o.A,{children:()=>e.example})})]})}}}]);