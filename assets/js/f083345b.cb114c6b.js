"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[643],{9842:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),i=a(1262),r=a(2406),o=a(5488),d=a(5162);function l(e){return n.createElement(o.Z,null,n.createElement(d.Z,{value:"code",label:"Code"},n.createElement(r.Z,{language:"jsx"},e.source)),n.createElement(d.Z,{value:"example",label:"Example"},n.createElement(i.Z,null,(()=>e.example))))}},1130:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>S,contentTitle:()=>x,default:()=>P,frontMatter:()=>F,metadata:()=>T,toc:()=>E});var n=a(7462),i=a(7294),r=a(3905),o=a(9842),d=a(9168),l=a(891);a(1061);const s=(0,l.Np)({birthday:(0,d.pt)({label:"Your birthday"}),appointment:(0,d.HF)({label:"Your appointment time"}),vacation:(0,d.A5)({label:"Enter your desired vacation"})});function c(){var e,t,a,n;const[r,o]=i.useState(null);return s.onSubmit(((e,t)=>{e.preventDefault(),o(t)})),i.createElement("div",null,i.createElement(l.H,{form:s}),r&&i.createElement("dl",null,i.createElement("dt",null,"Birthday"),i.createElement("dd",null,null==(e=r.birthday)?void 0:e.toLocaleString()),i.createElement("dt",null,"Appointment"),i.createElement("dd",null,null==(t=r.appointment)?void 0:t.toLocaleString()),i.createElement("dt",null,"Vacation"),i.createElement("dd",null,null==(a=r.vacation)?void 0:a.from.toLocaleString()," -"," ",null==(n=r.vacation)?void 0:n.to.toLocaleString())))}var m=a(5155);const p=(0,l.Np)({birthday:(0,d.pt)({label:"Your birthday",widget:(0,d.qC)({locale:m.Z})})});function u(){return i.createElement("div",null,i.createElement(l.H,{form:p,hideSubmit:!0}))}var f=a(879),h=a(302);const k=(0,l.Np)({birthday:(0,d.pt)({label:"Your birthday",widget:(0,d.qC)({locales:[m.Z,f.Z,h.Z],useBrowserLocale:!0})})});function g(){return i.createElement("div",null,i.createElement(l.H,{form:k,hideSubmit:!0}))}const b=(0,l.Np)({birthday:(0,d.pt)({label:"Your birthday",widget:(0,d.qC)({format:"yyyy-MM-dd"})})});function v(){return i.createElement("div",null,i.createElement(l.H,{form:b,hideSubmit:!0}))}const w=(0,l.Np)({inline:(0,d.pt)({label:"Inline datepicker",widget:(0,d.qC)({datePickerProps:{inline:!0}})}),as_function:(0,d.pt)({label:"Start from 1990, if not selected",widget:(0,d.qC)({datePickerProps:e=>({openToDate:e?void 0:new Date("1990-01-01")})})})});function y(){return i.createElement("div",null,i.createElement(l.H,{form:w,hideSubmit:!0}))}const F={},x="Date and time",T={unversionedId:"packages/date",id:"packages/date",title:"Date and time",description:"The @fab4m/date packages provides date and datetime components using the popular",source:"@site/docs/packages/date.md",sourceDirName:"packages",slug:"/packages/date",permalink:"/docs/packages/date",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Autocomplete",permalink:"/docs/packages/autocomplete"},next:{title:"Password",permalink:"/docs/packages/password"}},S={},E=[{value:"Installing",id:"installing",level:2},{value:"Using the date fields",id:"using-the-date-fields",level:2},{value:"The datepicker widget",id:"the-datepicker-widget",level:2},{value:"Date format",id:"date-format",level:3},{value:"Fixed locale",id:"fixed-locale",level:3},{value:"Using the browser locale",id:"using-the-browser-locale",level:3},{value:"Customizing React datepicker properties",id:"customizing-react-datepicker-properties",level:3}],N={toc:E};function P(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},N,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"date-and-time"},"Date and time"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@fab4m/date")," packages provides date and datetime components using the popular\n",(0,r.kt)("a",{parentName:"p",href:"https://reactdatepicker.com/"},"react-datepicker")," package."),(0,r.kt)("h2",{id:"installing"},"Installing"),(0,r.kt)("p",null,"Install @fab4m/date and react-datepicker (4.2.x)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @fab4m/date react-datepicker\n")),(0,r.kt)("h2",{id:"using-the-date-fields"},"Using the date fields"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@fab4m/date")," provides three field types: ",(0,r.kt)("inlineCode",{parentName:"p"},"dateField"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"dateTimeField")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"dateRangeField"),"."),(0,r.kt)("p",null,"The following example shows them in action:"),(0,r.kt)(o.Z,{source:'import * as React from "react";\nimport { dateField, dateTimeField, dateRangeField } from "@fab4m/date";\nimport { StatefulFormView, createForm } from "@fab4m/fab4m";\nimport "react-datepicker/dist/react-datepicker.css";\n\nconst form = createForm({\n  birthday: dateField({\n    label: "Your birthday",\n  }),\n  appointment: dateTimeField({\n    label: "Your appointment time",\n  }),\n  vacation: dateRangeField({\n    label: "Enter your desired vacation",\n  }),\n});\n\nexport default function DateExamples() {\n  const [result, changeResult] = React.useState(null);\n  form.onSubmit((e, data) => {\n    e.preventDefault();\n    changeResult(data);\n  });\n  return (\n    <div>\n      <StatefulFormView form={form} />\n      {/* The data that comes out of the form are dates. */}\n      {result && (\n        <dl>\n          <dt>Birthday</dt>\n          <dd>{result.birthday?.toLocaleString()}</dd>\n          <dt>Appointment</dt>\n          <dd>{result.appointment?.toLocaleString()}</dd>\n          <dt>Vacation</dt>\n          {/* The date range is two dates, from and to.*/}\n          <dd>\n            {result.vacation?.from.toLocaleString()} -{" "}\n            {result.vacation?.to.toLocaleString()}\n          </dd>\n        </dl>\n      )}\n    </div>\n  );\n}\n',example:(0,r.kt)(c,{mdxType:"DateFieldExample"}),mdxType:"Example"}),(0,r.kt)("h2",{id:"the-datepicker-widget"},"The datepicker widget"),(0,r.kt)("p",null,"The datepicker widget is used by default on all date and datetime fields. It has several\nsettings that let's you customize how it works."),(0,r.kt)("h3",{id:"date-format"},"Date format"),(0,r.kt)("p",null,"You can customize the format of the date when it's displayed inside of the input field.\nThe formatting options are provided by the ",(0,r.kt)("a",{parentName:"p",href:"https://date-fns.org/v2.29.3/docs/format"},"date-fns")," package."),(0,r.kt)(o.Z,{source:'import * as React from "react";\nimport { dateField, datePickerWidget } from "@fab4m/date";\nimport { StatefulFormView, createForm } from "@fab4m/fab4m";\nimport "react-datepicker/dist/react-datepicker.css";\n\nconst form = createForm({\n  birthday: dateField({\n    label: "Your birthday",\n    widget: datePickerWidget({\n      format: "yyyy-MM-dd",\n    }),\n  }),\n});\n\nexport default function CustomFormat() {\n  return (\n    <div>\n      <StatefulFormView form={form} hideSubmit={true} />\n    </div>\n  );\n}\n',example:(0,r.kt)(v,{mdxType:"CustomFormat"}),mdxType:"Example"}),(0,r.kt)("h3",{id:"fixed-locale"},"Fixed locale"),(0,r.kt)("p",null,"You can set a fixed locale for your datepicker field by providing a ",(0,r.kt)("a",{parentName:"p",href:"https://date-fns.org/v2.29.3/docs/Locale/"},"date-fns locale"),". This will make the datepicker format the dates according to the specified\nlocale, no matter what locale the browser has:"),(0,r.kt)(o.Z,{source:'import * as React from "react";\nimport { dateField, datePickerWidget } from "@fab4m/date";\nimport { sv } from "date-fns/locale";\nimport { StatefulFormView, createForm } from "@fab4m/fab4m";\nimport "react-datepicker/dist/react-datepicker.css";\n\nconst form = createForm({\n  birthday: dateField({\n    label: "Your birthday",\n    widget: datePickerWidget({\n      locale: sv,\n    }),\n  }),\n});\n\nexport default function SingleLocale() {\n  return (\n    <div>\n      <StatefulFormView form={form} hideSubmit={true} />\n    </div>\n  );\n}\n',example:(0,r.kt)(u,{mdxType:"SingleLocale"}),mdxType:"Example"}),(0,r.kt)("h3",{id:"using-the-browser-locale"},"Using the browser locale"),(0,r.kt)("p",null,"If you want to support multiple locales you can provide a list of all supported locales as a setting.\nThe datepicker widget will try to find out the browser locale and use the locale if it's provided in the list."),(0,r.kt)("p",null,"The first locale in the list will be used as a default."),(0,r.kt)(o.Z,{source:'import * as React from "react";\nimport { dateField, datePickerWidget } from "@fab4m/date";\nimport { sv, de, fi } from "date-fns/locale";\nimport { StatefulFormView, createForm } from "@fab4m/fab4m";\nimport "react-datepicker/dist/react-datepicker.css";\n\nconst form = createForm({\n  birthday: dateField({\n    label: "Your birthday",\n    widget: datePickerWidget({\n      locales: [sv, de, fi],\n      useBrowserLocale: true,\n    }),\n  }),\n});\n\nexport default function BrowserLocale() {\n  return (\n    <div>\n      <StatefulFormView form={form} hideSubmit={true} />\n    </div>\n  );\n}\n',example:(0,r.kt)(g,{mdxType:"BrowserLocale"}),mdxType:"Example"}),(0,r.kt)("h3",{id:"customizing-react-datepicker-properties"},"Customizing React datepicker properties"),(0,r.kt)("p",null,"react-datepicker supports many options and you might want to customize them according to your needs. You can do this by passing in the properties you want in the datePicker widget settings:"),(0,r.kt)(o.Z,{source:'import * as React from "react";\nimport { dateField, datePickerWidget } from "@fab4m/date";\nimport { StatefulFormView, createForm } from "@fab4m/fab4m";\nimport "react-datepicker/dist/react-datepicker.css";\n\nconst form = createForm({\n  inline: dateField({\n    label: "Inline datepicker",\n    widget: datePickerWidget({\n      datePickerProps: { inline: true },\n    }),\n  }),\n  as_function: dateField({\n    label: "Start from 1990, if not selected",\n    widget: datePickerWidget({\n      // The props can also be a function where the current value is passed in.\n      datePickerProps: (value) => ({\n        openToDate: !value ? new Date("1990-01-01") : undefined,\n      }),\n    }),\n  }),\n});\n\nexport default function CustomDatePickerProps() {\n  return (\n    <div>\n      <StatefulFormView form={form} hideSubmit={true} />\n    </div>\n  );\n}\n',example:(0,r.kt)(y,{mdxType:"DatePickerProps"}),mdxType:"Example"}),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Properties passed to react datepicker aren't serialized with your form, since we can't\npossibly support serializing all of the possible configurations!")),(0,r.kt)("h1",{id:"the-date-range-widget"},"The date range widget"),(0,r.kt)("p",null,"The date range widget is used with the date range field. It supports all settings from the date picker\nwidget above and the following additional settings:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"fromLabel"),": The text that is displayed inside of the from input field."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"toLabel"),": The text that is is displayed inside of the to input field."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"optionalEndDate"),": This makes the end date optional."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"withTime"),": If this is true, then you get the option to specify the time in the date range, not just the dates.")))}P.isMDXComponent=!0}}]);