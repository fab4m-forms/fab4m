"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[797],{40633:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var o=n(67844),r=n(74848),a=n(28453);const i={},s="Hello world!",l={authorsImageUrls:[]},d=[];function h(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"It's been a long time coming, but I finally released the first beta of\nfab4m, a better way to work with forms!"}),"\n",(0,r.jsx)(t.p,{children:"When working with development I always find dealing with forms to be\nthe most time consuming and tedious part of any project. There are\nmany solutions out there, but they tend to tailor to only part of the\nproblem: validation, rendering, and so on."}),"\n",(0,r.jsx)(t.p,{children:"I set out to finally solve the problem once and for all. It took way\nmore time than I anticipated, but here it is!"}),"\n",(0,r.jsx)(t.p,{children:"What are the highlights then?"}),"\n",(0,r.jsx)(t.p,{children:"Instead of working directly with markup, you structure your form using a javascript object:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-jsx",children:'import { createForm } from "@fab4m/fab4m";\nconst form = createForm({\n    title: textField({ label: "Title" }),\n});\n'})}),"\n",(0,r.jsx)(t.p,{children:"This makes it easy to build your structure however you like without having to think about how to structure the markup."}),"\n",(0,r.jsxs)(t.p,{children:["The form is made up from ",(0,r.jsx)(t.a,{href:"/docs/guide/define-a-form",children:"components"}),". The component describes one part of the form and the data that it contains."]}),"\n",(0,r.jsx)(t.p,{children:"Each component can have different widgets. The widget is responsible for rendering the component:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'const form = createForm({\n    title: textField({ label: "Title", widget: optionsWidget({}, ["one", "two"] }),\n});\n'})}),"\n",(0,r.jsxs)(t.p,{children:["In addition to this there's also ",(0,r.jsx)(t.a,{href:"/docs/guide/validators",children:"validators"})," and visibility rules to make it easy to validate your form."]}),"\n",(0,r.jsxs)(t.p,{children:["Fab4m allows you to easily validate form submissions anywhere. You can generate a ",(0,r.jsx)(t.a,{href:"https://json-schema.org/",children:"JSON Schema"})," from any form."]}),"\n",(0,r.jsxs)(t.p,{children:["The whole form structure can be ",(0,r.jsx)(t.a,{href:"/docs/guide/serializing",children:"serialized"})," so that it can\nbe stored easily."]}),"\n",(0,r.jsxs)(t.p,{children:["There are many more features, have a look in the ",(0,r.jsx)(t.a,{href:"/docs/intro",children:"docs"})," and try it out!"]})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},67844:e=>{e.exports=JSON.parse('{"permalink":"/blog/2022/12/11/hello-world","source":"@site/blog/2022-12-11-hello-world.md","title":"Hello world!","description":"It\'s been a long time coming, but I finally released the first beta of","date":"2022-12-11T00:00:00.000Z","tags":[],"readingTime":1.325,"hasTruncateMarker":true,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"Using fab4m with Laravel and Inertia.js","permalink":"/blog/2022/12/16/fab4m-and-laravel"}}')}}]);