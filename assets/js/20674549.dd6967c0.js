(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2747],{4720:(e,a,t)=>{"use strict";t.r(a),t.d(a,{assets:()=>g,contentTitle:()=>d,default:()=>y,frontMatter:()=>h,metadata:()=>p,toc:()=>b});var n=t(7462),r=t(7294),i=t(3905),o=t(2406),l=t(8966),s=t.n(l),u=t(891);const m=(0,u.Np)({username:(0,u.$S)({required:!0,validators:[(0,u.Ei)(5)]}),age:(0,u.OL)({label:"Username"}),city:(0,u.$S)({required:!0,validators:[(0,u.bq)(["Gothenburg","Stockholm"])]}),vegetarian:(0,u.Qr)({label:"Vegetarian"}),interests:(0,u.$S)({label:"Interests",multiple:!0,minItems:2}),profession:(0,u.ru)({label:"Profession"},{workplace:(0,u.$S)({label:"Workplace"}),label:(0,u.$S)({label:"Title"})})}),c=(0,u.$H)(m),f=()=>r.createElement("div",{style:{maxHeight:"300px",overflowY:"scroll"}},r.createElement(o.Z,{language:"json"},s()(c,null,2,80))),h={sidebar_position:8},d="Validation with JSON Schema",p={unversionedId:"guide/validation",id:"guide/validation",title:"Validation with JSON Schema",description:"All fab4m forms can generate a JSON Schema from their definition.",source:"@site/docs/guide/validation.mdx",sourceDirName:"guide",slug:"/guide/validation",permalink:"/fab4m/docs/guide/validation",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Component Rules",permalink:"/fab4m/docs/guide/rules"},next:{title:"Serializing forms",permalink:"/fab4m/docs/guide/serializing"}},g={},b=[{value:"Generating a JSON Schema",id:"generating-a-json-schema",level:2},{value:"Generating a schema for each form part",id:"generating-a-schema-for-each-form-part",level:2},{value:"Using your schema",id:"using-your-schema",level:2},{value:"When is this useful?",id:"when-is-this-useful",level:2}],v={toc:b};function y(e){let{components:a,...t}=e;return(0,i.kt)("wrapper",(0,n.Z)({},v,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"validation-with-json-schema"},"Validation with JSON Schema"),(0,i.kt)("p",null,"All fab4m forms can generate a JSON Schema from their definition.\nThis is very useful when you want to validate your form data on the server side."),(0,i.kt)("h2",{id:"generating-a-json-schema"},"Generating a JSON Schema"),(0,i.kt)("p",null,"Consider the following form:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'const form = createForm({\n  username: textField({ required: true, validators: [minLength(5)] }),\n  age: integerField({ label: "Username" }),\n  city: textField({\n    required: true,\n    validators: [allowedValues(["Gothenburg", "Stockholm"])],\n  }),\n  vegetarian: booleanField({ label: "Vegetarian" }),\n  interests: textField({ label: "Interests", multiple: true, minItems: 2 }),\n  profession: group(\n    { label: "Profession" },\n    {\n      workplace: textField({ label: "Workplace" }),\n      label: textField({ label: "Label" }),\n    }\n  ),\n});\n')),(0,i.kt)("p",null,"This data behind this form is quite complex to validate manually, luckily we don't have\nto, we can generate a schema for it and use that schema for validation instead."),(0,i.kt)("p",null,"Fab4m provides the ",(0,i.kt)("inlineCode",{parentName:"p"},"generateSchema"),"function to generate a schema for any form:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import { generateSchema } from "@fab4m/fab4m";\ngenerateSchema(form);\n')),(0,i.kt)("p",null,"This generates a schema that can be used by a JSON schema validator:"),(0,i.kt)(f,{mdxType:"Schema"}),(0,i.kt)("p",null,"Notice that:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The validators we defined above (minLength and allowedValues) on our components are part of the schema."),(0,i.kt)("li",{parentName:"ul"},"The interests multiple field is interpreted as an array."),(0,i.kt)("li",{parentName:"ul"},"Our group component is properly translated to an object inside of the schema.")),(0,i.kt)("h2",{id:"generating-a-schema-for-each-form-part"},"Generating a schema for each form part"),(0,i.kt)("p",null,"If you have forms with multiple parts you might need to validate each part in\nisolation."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import { generatePartSchemas } from "@fab4m/fab4m";\nconst schemas = generatePartSchemas(form);\n')),(0,i.kt)("p",null,"This will give you an array of schemas, one for each form part in your form."),(0,i.kt)("h2",{id:"using-your-schema"},"Using your schema"),(0,i.kt)("p",null,"Fab4m doesn't provide a JSON Schema validator of it's own, you are free to choose\nany validator you like. The ",(0,i.kt)("a",{parentName:"p",href:"https://ajv.js.org/"},"AJV validator")," for javascript is an\nexcellent choice in js environments."),(0,i.kt)("h2",{id:"when-is-this-useful"},"When is this useful?"),(0,i.kt)("p",null,"Having a JSON schema readily available for any form means that you can always validate the input from any form on any backend with a JSON validator available."))}y.isMDXComponent=!0},8966:e=>{var a,t,n,r=/[\\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,i={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};function o(e){return r.lastIndex=0,r.test(e)?'"'+e.replace(r,(function(e){var a=i[e];return"string"==typeof a?a:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)}))+'"':'"'+e+'"'}function l(e,r,i){var s,u,m,c,f,h=a,d=r[e];switch(d&&"object"==typeof d&&"function"==typeof d.toJSON&&(d=d.toJSON(e)),"function"==typeof n&&(d=n.call(r,e,d)),typeof d){case"string":return o(d);case"number":return isFinite(d)?String(d):"null";case"boolean":case"null":return String(d);case"object":if(!d)return"null";if(a+=t,f=[],"[object Array]"===Object.prototype.toString.apply(d)){for(c=d.length,s=0;s<c;s+=1)f[s]=l(s,d,i)||"null";return m=0===f.length?"[]":a?a.length+f.join(", ").length+4>i?"[\n"+a+f.join(",\n"+a)+"\n"+h+"]":"[ "+f.join(", ")+" ]":"["+f.join(",")+"]",a=h,m}if(n&&"object"==typeof n)for(c=n.length,s=0;s<c;s+=1)"string"==typeof n[s]&&(m=l(u=n[s],d,i))&&f.push(o(u)+(a?": ":":")+m);else for(u in d)Object.prototype.hasOwnProperty.call(d,u)&&(m=l(u,d,i))&&f.push(o(u)+(a?": ":":")+m);return m=0===f.length?"{}":a?a.length+f.join(", ").length+4>i?"{\n"+a+f.join(",\n"+a)+"\n"+h+"}":"{ "+f.join(", ")+" }":"{"+f.join(",")+"}",a=h,m}}e.exports=function(e,r,i,o){var s;if(a="",t="",o||(o=0),"number"!=typeof o)throw new Error("beaufifier: limit must be a number");if("number"==typeof i)for(s=0;s<i;s+=1)t+=" ";else"string"==typeof i&&(t=i);if(n=r,r&&"function"!=typeof r&&("object"!=typeof r||"number"!=typeof r.length))throw new Error("beautifier: wrong replacer parameter");return l("",{"":e},o)}}}]);