"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[704],{5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),o=n(6010);const r="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>f});var a=n(7462),o=n(7294),r=n(6010),l=n(2389),i=n(7392),m=n(7094),s=n(2466);const u="tabList__CuJ",d="tabItem_LNqP";function c(e){var t,n;const{lazy:l,block:c,defaultValue:f,values:p,groupId:h,className:g}=e,b=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),x=null!=p?p:b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,i.l)(x,((e,t)=>e.value===t.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===f?f:null!=(t=null!=f?f:null==(n=b.find((e=>e.props.default)))?void 0:n.props.value)?t:b[0].props.value;if(null!==k&&!x.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+x.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:y}=(0,m.U)(),[F,E]=(0,o.useState)(k),T=[],{blockElementScrollPositionUntilNextRender:S}=(0,s.o5)();if(null!=h){const e=w[h];null!=e&&e!==F&&x.some((t=>t.value===e))&&E(e)}const V=e=>{const t=e.currentTarget,n=T.indexOf(t),a=x[n].value;a!==F&&(S(t),E(a),null!=h&&y(h,String(a)))},N=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{var a;const t=T.indexOf(e.currentTarget)+1;n=null!=(a=T[t])?a:T[0];break}case"ArrowLeft":{var o;const t=T.indexOf(e.currentTarget)-1;n=null!=(o=T[t])?o:T[T.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":c},g)},x.map((e=>{let{value:t,label:n,attributes:l}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:F===t?0:-1,"aria-selected":F===t,key:t,ref:e=>T.push(e),onKeyDown:N,onFocus:V,onClick:V},l,{className:(0,r.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":F===t})}),null!=n?n:t)}))),l?(0,o.cloneElement)(b.filter((e=>e.props.value===F))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==F})))))}function f(e){const t=(0,l.Z)();return o.createElement(c,(0,a.Z)({key:String(t)},e))}},9842:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7294),o=n(1262),r=n(2406),l=n(5488),i=n(5162);function m(e){return a.createElement(l.Z,null,a.createElement(i.Z,{value:"code",label:"Code"},a.createElement(r.Z,{language:"jsx"},e.source)),a.createElement(i.Z,{value:"example",label:"Example"},a.createElement(o.Z,null,(()=>e.example))))}},1360:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>x,contentTitle:()=>g,default:()=>w,frontMatter:()=>h,metadata:()=>b,toc:()=>v});var a=n(7462),o=n(7294),r=n(3905),l=n(9842),i=n(891);const m=(0,i.Np)({text:(0,i.$S)({label:"Text field"})});function s(){return o.createElement(i.mv,{form:m,data:{text:"Some text"}})}const u=(0,i.Np)({text:(0,i.$S)({label:"Text field"})});function d(){const[e,t]=o.useState({text:"Some text"});return u.onDataChange(t),o.createElement("div",null,o.createElement(i.mv,{form:u,data:e,hideSubmit:!0}),o.createElement("p",null,e.text))}const c=(0,i.Np)({text:(0,i.$S)({label:"Text field"})});function f(){return o.createElement(i.H,{form:c})}function p(){const e=(0,i.cI)((()=>(0,i.Np)({text:(0,i.$S)({label:"text field"})})));return o.createElement(i.H,{form:e})}const h={sidebar_position:2},g="Rendering forms",b={unversionedId:"guide/rendering-the-form",id:"guide/rendering-the-form",title:"Rendering forms",description:"Forms are rendered using derivatives of the FormView component. This section describes how to work with that component and it's cousin, StatefulFormView.",source:"@site/docs/guide/rendering-the-form.mdx",sourceDirName:"guide",slug:"/guide/rendering-the-form",permalink:"/docs/guide/rendering-the-form",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Creating forms",permalink:"/docs/guide/define-a-form"},next:{title:"Theming",permalink:"/docs/guide/theming"}},x={},v=[{value:"Basic rendering",id:"basic-rendering",level:2},{value:"Managing the form state",id:"managing-the-form-state",level:2},{value:"Handling the state automatically",id:"handling-the-state-automatically",level:2},{value:"Defining forms inside React components",id:"defining-forms-inside-react-components",level:2}],k={toc:v};function w(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rendering-forms"},"Rendering forms"),(0,r.kt)("p",null,"Forms are rendered using derivatives of the ",(0,r.kt)("inlineCode",{parentName:"p"},"FormView")," component. This section describes how to work with that component and it's cousin, ",(0,r.kt)("inlineCode",{parentName:"p"},"StatefulFormView"),"."),(0,r.kt)("h2",{id:"basic-rendering"},"Basic rendering"),(0,r.kt)("p",null,"The most common way to render a form is through the ",(0,r.kt)("inlineCode",{parentName:"p"},"<FormView>")," component."),(0,r.kt)("p",null,"The FormView component takes your form definition and the form data and renders it:"),(0,r.kt)(l.Z,{source:'import React from "react";\nimport { textField, createForm, FormView } from "@fab4m/fab4m";\n\nconst form = createForm({\n  text: textField({ label: "Text field" }),\n});\n\nexport default function BasicExample() {\n  return <FormView form={form} data={{ text: "Some text" }} />;\n}\n',example:(0,r.kt)(s,{mdxType:"Basic"}),mdxType:"Example"}),(0,r.kt)("h2",{id:"managing-the-form-state"},"Managing the form state"),(0,r.kt)("p",null,"The FormView component only renders the form with the data provided,\nand doesn't manage the form state. When using the FormView component you have to do that yourself:"),(0,r.kt)(l.Z,{source:'import * as React from "react";\nimport { textField, createForm, FormView } from "@fab4m/fab4m";\n\nconst form = createForm({\n  text: textField({ label: "Text field" }),\n});\n\nexport default function FormViewExampleWithHook() {\n  const [data, changeData] = React.useState({ text: "Some text" });\n  form.onDataChange(changeData);\n  return (\n    <div>\n      <FormView form={form} data={data} hideSubmit={true} />\n      <p>{data.text}</p>\n    </div>\n  );\n}\n',example:(0,r.kt)(d,{mdxType:"FormState"}),mdxType:"Example"}),(0,r.kt)("h2",{id:"handling-the-state-automatically"},"Handling the state automatically"),(0,r.kt)("p",null,"If you don't want to manage the state of the form yourself you can use our\nprovided ",(0,r.kt)("inlineCode",{parentName:"p"},"<StatefulFormView>")," component:"),(0,r.kt)(l.Z,{source:'import * as React from "react";\nimport { textField, createForm, StatefulFormView } from "@fab4m/fab4m";\n\nconst form = createForm({\n  text: textField({ label: "Text field" }),\n});\n\nexport default function StatefulFormExample() {\n  return <StatefulFormView form={form} />;\n}\n',example:(0,r.kt)(f,{mdxType:"StatefulView"}),mdxType:"Example"}),(0,r.kt)("h2",{id:"defining-forms-inside-react-components"},"Defining forms inside React components"),(0,r.kt)("p",null,"Creating the form definition is resource heavy, so if you need to define your form definition within your react component you should use the ",(0,r.kt)("inlineCode",{parentName:"p"},"useForm()")," hook:"),(0,r.kt)(l.Z,{source:'import * as React from "react";\nimport { textField, StatefulFormView, useForm, createForm } from "@fab4m/fab4m";\n\nexport default function HookExample() {\n  const form = useForm(() =>\n    createForm({ text: textField({ label: "text field" }) })\n  );\n  return <StatefulFormView form={form} />;\n}\n',example:(0,r.kt)(p,{mdxType:"ReactHook"}),mdxType:"Example"}),(0,r.kt)("p",null,"The useForm hook optionally takes an array of dependencies as it's second argument that will be checked, and the form will be rebuilt if any changes are detected."),(0,r.kt)("p",null,"Internally, the useForm hook is just a wrapper around a ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/hooks-reference.html#usememo"},"useMemo")," hook."))}w.isMDXComponent=!0}}]);