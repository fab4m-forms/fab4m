"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1927],{94270:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>t,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"guide/serializing","title":"Serializing forms","description":"The data structure of a form contains complex objects that can\'t","source":"@site/docs/guide/serializing.mdx","sourceDirName":"guide","slug":"/guide/serializing","permalink":"/docs/guide/serializing","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Validation with JSON Schema","permalink":"/docs/guide/validation"},"next":{"title":"Component reference","permalink":"/docs/guide/component-reference"}}');var a=n(74848),s=n(28453);const o={sidebar_position:9},t="Serializing forms",l={},d=[{value:"Serializing a form from a definition",id:"serializing-a-form-from-a-definition",level:2},{value:"Unserializing the form",id:"unserializing-the-form",level:2}];function c(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"serializing-forms",children:"Serializing forms"})}),"\n",(0,a.jsx)(i.p,{children:"The data structure of a form contains complex objects that can't\nbe readily serialized. This means it can be complicated to store\na form definition in a JSON storage. In order to remedy that,\nfab4m provides a mechanism for serializing and unserializing forms."}),"\n",(0,a.jsx)(i.h2,{id:"serializing-a-form-from-a-definition",children:"Serializing a form from a definition"}),"\n",(0,a.jsx)(i.p,{children:"Let's say you have the following form definition:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-jsx",children:'const form = createForm({\n  name: textField({ label: "Name" }),\n  age: integerField({ label: "Age" }),\n});\n'})}),"\n",(0,a.jsx)(i.p,{children:"You can then serialize your form with the serialize function:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-jsx",children:"const serializedForm = serialize(form);\n"})}),"\n",(0,a.jsx)(i.p,{children:"You get an object back that can be safely serialized to a JSON object."}),"\n",(0,a.jsx)(i.h2,{id:"unserializing-the-form",children:"Unserializing the form"}),"\n",(0,a.jsx)(i.p,{children:"A serialized form can be turned back into a working form definition by unserializing it:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-jsx",children:"const form = unserialize(form);\n"})})]})}function m(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);