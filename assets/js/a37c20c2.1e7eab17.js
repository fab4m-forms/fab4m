(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[429],{5220:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>y,default:()=>w,frontMatter:()=>b,metadata:()=>g,toc:()=>x});var o=n(7462),r=n(7294),l=n(3905),u=n(1809),a=n(891);const i=(0,a.Np)({city:(0,a.$S)({label:"City"}),inCityCenter:(0,a.Qr)({label:"Do you live in the city center?"}),streetCars:(0,a.Qr)({label:"Do you use street cars?",rules:[["city",(0,a.fS)("Gothenburg")],["inCityCenter",(0,a.fS)(!0)]]}),subway:(0,a.Qr)({label:"Do you use the subway?",rules:[["city",(0,a.fS)("Stockholm")]]}),usage:(0,a.OL)({label:"How may times do you use public transport per week?"}),expensive:(0,a.Qr)({label:"Do you think public transport is too expensive?",rules:[["usage",(0,a.Fp)(3)]]})});function s(){return r.createElement(a.H,{form:i,hideSubmit:!0})}const c=(0,a.Np)({city:(0,a.$S)({label:"City"}),usage:(0,a.OL)({label:"How may times do you use public transport per week?"}),expensive:(0,a.Qr)({label:"Do you think public transport is too expensive?",rules:[(0,a.or)([["city",(0,a.fS)("Gothenburg")],["usage",(0,a.Fp)(5)]])]})});function m(){return r.createElement(a.H,{form:c,hideSubmit:!0})}var p=n(8966),d=n.n(p);const f=(0,a.Np)({city:(0,a.$S)({label:"City"}),streetCars:(0,a.Qr)({label:"Do you use street cars?",required:!0,rules:[["city",(0,a.fS)("Gothenburg")]]})});function h(){const[e,t]=r.useState((0,a.$H)(f));return f.onDataChange((e=>{t((0,a.$H)(f,e))})),r.createElement("div",null,r.createElement(a.H,{form:f,hideSubmit:!0}),r.createElement("h4",null,"Here's the schema:"),r.createElement("pre",null,d()(e,null,2,80)))}const b={sidebar_position:7},y="Component Rules",g={unversionedId:"guide/rules",id:"guide/rules",title:"Component Rules",description:"There might be situations where you want to optionally show or hide some components",source:"@site/docs/guide/rules.mdx",sourceDirName:"guide",slug:"/guide/rules",permalink:"/docs/guide/rules",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Component Validators",permalink:"/docs/guide/validators"},next:{title:"Component Variants",permalink:"/docs/guide/variants"}},k={},x=[{value:"Adding rules to a component",id:"adding-rules-to-a-component",level:2},{value:"Rule groups",id:"rule-groups",level:2},{value:"Custom rules",id:"custom-rules",level:2},{value:"Rules and JSON Schema",id:"rules-and-json-schema",level:2},{value:"Check out the rule library",id:"check-out-the-rule-library",level:2}],S={toc:x};function w(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,o.Z)({},S,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"component-rules"},"Component Rules"),(0,l.kt)("p",null,"There might be situations where you want to optionally show or hide some components\ndepending on the input in other components. This is what component rules are for."),(0,l.kt)("h2",{id:"adding-rules-to-a-component"},"Adding rules to a component"),(0,l.kt)("p",null,"When defining your components you can add a list of rules that needs to be fulfilled\nin order for the component to be visible:"),(0,l.kt)(u.Z,{source:'import * as React from "react";\nimport {\n  textField,\n  integerField,\n  booleanField,\n  equals,\n  max,\n  createForm,\n  StatefulFormView,\n} from "@fab4m/fab4m";\n\nconst form = createForm({\n  city: textField({ label: "City" }),\n  inCityCenter: booleanField({ label: "Do you live in the city center?" }),\n  streetCars: booleanField({\n    label: "Do you use street cars?",\n    rules: [\n      ["city", equals("Gothenburg")],\n      ["inCityCenter", equals(true)],\n    ],\n  }),\n  subway: booleanField({\n    label: "Do you use the subway?",\n    rules: [["city", equals("Stockholm")]],\n  }),\n  usage: integerField({\n    label: "How may times do you use public transport per week?",\n  }),\n  expensive: booleanField({\n    label: "Do you think public transport is too expensive?",\n    rules: [["usage", max(3)]],\n  }),\n});\n\nexport default function BasicRules() {\n  return <StatefulFormView form={form} hideSubmit={true} />;\n}\n',example:(0,l.kt)(s,{mdxType:"BasicRules"}),mdxType:"Example"}),(0,l.kt)("h2",{id:"rule-groups"},"Rule groups"),(0,l.kt)("p",null,"By default, rules are logically ANDed together."),(0,l.kt)("p",null,"You can use logical groups to override this."),(0,l.kt)(u.Z,{source:'import React from "react";\nimport {\n  textField,\n  integerField,\n  booleanField,\n  equals,\n  max,\n  createForm,\n  StatefulFormView,\n  or,\n} from "@fab4m/fab4m";\n\nconst form = createForm({\n  city: textField({ label: "City" }),\n  usage: integerField({\n    label: "How may times do you use public transport per week?",\n  }),\n  expensive: booleanField({\n    label: "Do you think public transport is too expensive?",\n    rules: [\n      or([\n        ["city", equals("Gothenburg")],\n        ["usage", max(5)],\n      ]),\n    ],\n  }),\n});\n\nexport default function BasicRules() {\n  return <StatefulFormView form={form} hideSubmit={true} />;\n}\n',example:(0,l.kt)(m,{mdxType:"RuleGroups"}),mdxType:"Example"}),(0,l.kt)("p",null,"Rule functions can also be nested:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},'expensive: booleanField({\n  title: "Do you think public transport is too expensive?",\n  rules: [or([equals("city", "Gothenburg"), and([greaterThan("usage", 5), lessThan(10)]))],\n}),\n')),(0,l.kt)("h2",{id:"custom-rules"},"Custom rules"),(0,l.kt)("p",null,"You can use the callback rule to provide any logic you want for your form."),(0,l.kt)("h2",{id:"rules-and-json-schema"},"Rules and JSON Schema"),(0,l.kt)("p",null,"Due to the potential complexity of rules in forms, we generate a unique JSON\nschema depending on the state of the data to keep the schema simple. for example:"),(0,l.kt)(u.Z,{source:'import * as React from "react";\nimport * as beautify from "json-beautify";\nimport {\n  textField,\n  equals,\n  StatefulFormView,\n  generateSchema,\n  createForm,\n  booleanField,\n} from "@fab4m/fab4m";\n\nconst form = createForm({\n  city: textField({ label: "City" }),\n  streetCars: booleanField({\n    label: "Do you use street cars?",\n    required: true,\n    rules: [["city", equals("Gothenburg")]],\n  }),\n});\n\nexport default function RuleSchema() {\n  const [schema, changeSchema] = React.useState(generateSchema(form));\n  form.onDataChange((data) => {\n    changeSchema(generateSchema(form, data));\n  });\n  return (\n    <div>\n      <StatefulFormView form={form} hideSubmit={true} />\n      <h4>Here\'s the schema:</h4>\n      <pre>{beautify.default(schema, null, 2, 80)}</pre>\n    </div>\n  );\n}\n',example:(0,l.kt)(h,{mdxType:"RuleSchema"}),mdxType:"Example"}),(0,l.kt)("h2",{id:"check-out-the-rule-library"},"Check out the rule library"),(0,l.kt)("p",null,"Fab4m comes with several rules, check them out in the ",(0,l.kt)("em",{parentName:"p"},"Rule reference"),". Also, check the ",(0,l.kt)("em",{parentName:"p"},"extension guide")," on how to create your own widgets."))}w.isMDXComponent=!0},8966:e=>{var t,n,o,r=/[\\\"\u0000-\u001f\u007f-\u009f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,l={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};function u(e){return r.lastIndex=0,r.test(e)?'"'+e.replace(r,(function(e){var t=l[e];return"string"==typeof t?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)}))+'"':'"'+e+'"'}function a(e,r,l){var i,s,c,m,p,d=t,f=r[e];switch(f&&"object"==typeof f&&"function"==typeof f.toJSON&&(f=f.toJSON(e)),"function"==typeof o&&(f=o.call(r,e,f)),typeof f){case"string":return u(f);case"number":return isFinite(f)?String(f):"null";case"boolean":case"null":return String(f);case"object":if(!f)return"null";if(t+=n,p=[],"[object Array]"===Object.prototype.toString.apply(f)){for(m=f.length,i=0;i<m;i+=1)p[i]=a(i,f,l)||"null";return c=0===p.length?"[]":t?t.length+p.join(", ").length+4>l?"[\n"+t+p.join(",\n"+t)+"\n"+d+"]":"[ "+p.join(", ")+" ]":"["+p.join(",")+"]",t=d,c}if(o&&"object"==typeof o)for(m=o.length,i=0;i<m;i+=1)"string"==typeof o[i]&&(c=a(s=o[i],f,l))&&p.push(u(s)+(t?": ":":")+c);else for(s in f)Object.prototype.hasOwnProperty.call(f,s)&&(c=a(s,f,l))&&p.push(u(s)+(t?": ":":")+c);return c=0===p.length?"{}":t?t.length+p.join(", ").length+4>l?"{\n"+t+p.join(",\n"+t)+"\n"+d+"}":"{ "+p.join(", ")+" }":"{"+p.join(",")+"}",t=d,c}}e.exports=function(e,r,l,u){var i;if(t="",n="",u||(u=0),"number"!=typeof u)throw new Error("beaufifier: limit must be a number");if("number"==typeof l)for(i=0;i<l;i+=1)n+=" ";else"string"==typeof l&&(n=l);if(o=r,r&&"function"!=typeof r&&("object"!=typeof r||"number"!=typeof r.length))throw new Error("beautifier: wrong replacer parameter");return a("",{"":e},u)}}}]);