"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4992],{9443:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>m,default:()=>b,frontMatter:()=>c,metadata:()=>u,toc:()=>f});var o=a(7462),l=a(7294),n=a(3905),r=a(1809),i=a(891);const s=(0,i.Np)({city:(0,i.$S)({label:"City",validators:[(0,i.bq)(["Gothenburg","Stockholm"],"Choose either Stockholm or Gothenburg")],required:!0}),break:(0,i.Pr)(),content:(0,i.kQ)({},(()=>l.createElement("div",null,"Great choice!")))});function d(){return l.createElement(i.H,{form:s,hideSubmit:!0})}const c={},m="Allowed values",u={unversionedId:"validators/allowedValues",id:"validators/allowedValues",title:"Allowed values",description:"The allowed values validator let's you ensure that a component has",source:"@site/docs/validators/allowedValues.mdx",sourceDirName:"validators",slug:"/validators/allowedValues",permalink:"fab4m/docs/validators/allowedValues",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Text field",permalink:"fab4m/docs/widgets/textfield"},next:{title:"callback",permalink:"fab4m/docs/validators/callback"}},p={},f=[{value:"Example",id:"example",level:2},{value:"Compatible components",id:"compatible-components",level:2}],h={toc:f};function b(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"allowed-values"},"Allowed values"),(0,n.kt)("p",null,"The allowed values validator let's you ensure that a component has\none of the specified values."),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)(r.Z,{source:'import React from "react";\nimport {\n  createForm,\n  pageBreak,\n  textField,\n  StatefulFormView,\n  content,\n  allowedValues,\n} from "@fab4m/fab4m";\nimport "fab4m/css/basic/basic.css";\n\nconst form = createForm({\n  city: textField({\n    label: "City",\n    validators: [\n      allowedValues(\n        ["Gothenburg", "Stockholm"],\n        "Choose either Stockholm or Gothenburg"\n      ),\n    ],\n    required: true,\n  }),\n  break: pageBreak(),\n  content: content({}, () => <div>Great choice!</div>),\n});\n\nexport default function TextFieldExample() {\n  return <StatefulFormView form={form} hideSubmit={true} />;\n}\n',example:(0,n.kt)(d,{mdxType:"ExampleComponent"}),mdxType:"Example"}),(0,n.kt)("h2",{id:"compatible-components"},"Compatible components"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docs/components/text"},"Text field"))))}b.isMDXComponent=!0}}]);