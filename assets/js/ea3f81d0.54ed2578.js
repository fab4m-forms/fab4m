"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3084],{1599:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>p,default:()=>v,frontMatter:()=>d,metadata:()=>c,toc:()=>u});var a=n(7462),i=n(7294),o=n(3905),l=n(1809),s=n(891);const r=(0,s.Np)({image:(0,s.At)({label:"Image",validators:[(0,s.kZ)(["jpg","png"],{message:"The file type is not allowed!"})]}),break:(0,s.Pr)(),content:(0,s.kQ)({},(e=>i.createElement("div",null,"Nice upload ",e.image.name,"!")))});function m(){return i.createElement(s.H,{form:r,hideSubmit:!0})}const d={},p="Allowed file extensions",c={unversionedId:"validators/fileExtension",id:"validators/fileExtension",title:"Allowed file extensions",description:"The file extension validator allows you to validate that the file",source:"@site/docs/validators/fileExtension.mdx",sourceDirName:"validators",slug:"/validators/fileExtension",permalink:"/docs/validators/fileExtension",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Exists",permalink:"/docs/validators/exists"},next:{title:"Max file Size",permalink:"/docs/validators/filesize"}},f={},u=[{value:"Example",id:"example",level:2},{value:"Compatible components",id:"compatible-components",level:2}],x={toc:u};function v(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},x,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"allowed-file-extensions"},"Allowed file extensions"),(0,o.kt)("p",null,"The file extension validator allows you to validate that the file\nextension matches one of the provided allowed extensions."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)(l.Z,{source:'import React from "react";\nimport {\n  createForm,\n  pageBreak,\n  fileField,\n  StatefulFormView,\n  content,\n  fileExtension,\n} from "@fab4m/fab4m";\nimport "@fab4m/fab4m/css/basic/basic.css";\n\nconst form = createForm({\n  image: fileField({\n    label: "Image",\n    validators: [\n      fileExtension(["jpg", "png"], {\n        message: "The file type is not allowed!",\n      }),\n    ],\n  }),\n  break: pageBreak(),\n  content: content({}, (data) => <div>Nice upload {data.image.name}!</div>),\n});\n\nexport default function FileExtensionExample() {\n  return <StatefulFormView form={form} hideSubmit={true} />;\n}\n',example:(0,o.kt)(m,{mdxType:"ExampleComponent"}),mdxType:"Example"}),(0,o.kt)("h2",{id:"compatible-components"},"Compatible components"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/components/file"},"File upload"))))}v.isMDXComponent=!0}}]);